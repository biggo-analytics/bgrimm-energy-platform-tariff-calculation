/**\n * Enhanced PEA Electricity Controller\n * \n * PEA-specific controller using the enhanced modular architecture.\n * Demonstrates how the same controller pattern works for different providers.\n */\n\nconst { EnhancedBaseElectricityController } = require('./enhanced-base-electricity.controller');\nconst { enhancedPeaElectricityService } = require('../services/enhanced-pea-electricity.service');\n\n/**\n * Enhanced PEA Electricity Controller\n * \n * Provides PEA-specific electricity calculation endpoints using the\n * enhanced modular architecture with dependency injection.\n */\nclass EnhancedPEAElectricityController extends EnhancedBaseElectricityController {\n  constructor() {\n    super(enhancedPeaElectricityService, 'pea');\n  }\n  \n  /**\n   * Get PEA service information\n   * \n   * @param {Object} ctx - Koa context\n   * @returns {Promise<void>}\n   */\n  async getServiceInfo(ctx) {\n    try {\n      const serviceInfo = this.electricityService.getServiceInfo();\n      \n      ctx.status = 200;\n      ctx.body = {\n        success: true,\n        ...serviceInfo,\n        timestamp: new Date().toISOString()\n      };\n    } catch (error) {\n      ctx.status = 500;\n      ctx.body = {\n        success: false,\n        error: 'Unable to retrieve service information',\n        provider: 'pea'\n      };\n    }\n  }\n}\n\n// Create singleton instance\nconst enhancedPeaElectricityController = new EnhancedPEAElectricityController();\n\nmodule.exports = {\n  EnhancedPEAElectricityController,\n  enhancedPeaElectricityController\n};"
