/**\n * Enhanced MEA Electricity Service\n * \n * MEA-specific implementation using the new modular architecture.\n * Demonstrates dependency injection and configuration-based setup.\n */\n\nconst { EnhancedElectricityStrategyService } = require('./enhanced-electricity-strategy.service');\nconst meaRates = require('../config/mea-rates');\n\n/**\n * MEA-specific service configuration\n */\nconst MEA_SERVICE_CHARGE = 312.24; // Standard service charge for MEA\nconst MEA_PROVIDER = 'mea';\n\n/**\n * Create enhanced MEA electricity service instance\n * \n * Uses dependency injection to provide MEA-specific configuration\n * while leveraging the common enhanced service implementation.\n */\nclass EnhancedMEAElectricityService extends EnhancedElectricityStrategyService {\n  constructor() {\n    super(meaRates, MEA_SERVICE_CHARGE, MEA_PROVIDER);\n  }\n  \n  /**\n   * Get MEA-specific information\n   * \n   * @returns {Object} - MEA service information\n   */\n  getServiceInfo() {\n    return {\n      provider: 'MEA',\n      fullName: 'Metropolitan Electricity Authority',\n      serviceArea: 'Bangkok and surrounding metropolitan areas',\n      serviceCharge: MEA_SERVICE_CHARGE,\n      architecture: 'enhanced-modular',\n      availableCalculationTypes: this.getAvailableCalculationTypes(),\n      capabilities: {\n        validation: 'composition-engine',\n        calculation: 'modular-factory',\n        errorHandling: 'comprehensive',\n        logging: 'structured'\n      }\n    };\n  }\n}\n\n// Create singleton instance\nconst enhancedMeaElectricityService = new EnhancedMEAElectricityService();\n\nmodule.exports = {\n  EnhancedMEAElectricityService,\n  enhancedMeaElectricityService\n};"
